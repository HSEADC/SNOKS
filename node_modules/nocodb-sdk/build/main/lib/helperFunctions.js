"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.integrationCategoryNeedDefault = exports.getTestDatabaseName = exports.getRenderAsTextFunForUiType = exports.getAvailableRollupForFormulaType = exports.getAvailableRollupForUiType = exports.getAvailableRollupForColumn = exports.stringifyRolesObj = exports.extractRolesObj = exports.isSelfReferencingTableColumn = exports.isSystemColumn = exports.getSystemColumns = exports.getSystemColumnsIds = exports.filterOutSystemColumns = void 0;
exports.populateUniqueFileName = populateUniqueFileName;
exports.roundUpToPrecision = roundUpToPrecision;
exports.parseProp = parseProp;
exports.stringifyProp = stringifyProp;
exports.parseHelper = parseHelper;
exports.stringifyHelper = stringifyHelper;
exports.toSafeInteger = toSafeInteger;
exports.isCrossBaseLink = isCrossBaseLink;
exports.lookupCanHaveRecursiveEvaluation = lookupCanHaveRecursiveEvaluation;
const UITypes_1 = __importStar(require("./UITypes"));
const globals_1 = require("./globals");
const enums_1 = require("./enums");
const Api_1 = require("./Api");
const formulaHelpers_1 = require("./formulaHelpers");
const is_1 = require("../lib/is");
// import {RelationTypes} from "./globals";
// const systemCols = ['created_at', 'updated_at']
const filterOutSystemColumns = (columns) => {
    return (columns && columns.filter((c) => !isSystemColumn(c))) || [];
};
exports.filterOutSystemColumns = filterOutSystemColumns;
const getSystemColumnsIds = (columns) => {
    return ((columns && columns.filter(isSystemColumn)) || []).map((c) => c.id);
};
exports.getSystemColumnsIds = getSystemColumnsIds;
const getSystemColumns = (columns) => columns.filter(isSystemColumn) || [];
exports.getSystemColumns = getSystemColumns;
const isSystemColumn = (col) => !!(col &&
    (col.uidt === UITypes_1.default.ForeignKey ||
        ((col.column_name === 'created_at' || col.column_name === 'updated_at') &&
            col.uidt === UITypes_1.default.DateTime) ||
        (col.pk && (col.ai || col.cdf)) ||
        (col.pk && col.meta && col.meta.ag) ||
        col.system));
exports.isSystemColumn = isSystemColumn;
const isSelfReferencingTableColumn = (col) => {
    var _a, _b, _c;
    return (col &&
        (col.uidt === UITypes_1.default.Links || col.uidt === UITypes_1.default.LinkToAnotherRecord) &&
        ((col === null || col === void 0 ? void 0 : col.fk_model_id) || ((_a = col === null || col === void 0 ? void 0 : col.colOptions) === null || _a === void 0 ? void 0 : _a.fk_model_id)) &&
        ((_b = col === null || col === void 0 ? void 0 : col.colOptions) === null || _b === void 0 ? void 0 : _b.fk_related_model_id) &&
        ((col === null || col === void 0 ? void 0 : col.fk_model_id) || ((_c = col === null || col === void 0 ? void 0 : col.colOptions) === null || _c === void 0 ? void 0 : _c.fk_model_id)) ===
            col.colOptions.fk_related_model_id);
};
exports.isSelfReferencingTableColumn = isSelfReferencingTableColumn;
const extractRolesObj = (roles) => {
    if (!roles)
        return null;
    if (typeof roles === 'object' && !Array.isArray(roles))
        return roles;
    if (typeof roles === 'string') {
        roles = roles.split(',');
    }
    if (roles.length === 0)
        return null;
    return roles.reduce((acc, role) => {
        acc[role] = true;
        return acc;
    }, {});
};
exports.extractRolesObj = extractRolesObj;
const stringifyRolesObj = (roles) => {
    if (!roles)
        return '';
    const rolesArr = Object.keys(roles).filter((r) => roles[r]);
    return rolesArr.join(',');
};
exports.stringifyRolesObj = stringifyRolesObj;
const getAvailableRollupForColumn = (column) => {
    var _a, _b;
    if ([UITypes_1.default.Formula].includes(column.uidt)) {
        return getAvailableRollupForFormulaType((_b = (_a = column.colOptions.parsed_tree) === null || _a === void 0 ? void 0 : _a.dataType) !== null && _b !== void 0 ? _b : formulaHelpers_1.FormulaDataTypes.UNKNOWN);
    }
    else {
        return getAvailableRollupForUiType(column.uidt);
    }
};
exports.getAvailableRollupForColumn = getAvailableRollupForColumn;
const getAvailableRollupForUiType = (type) => {
    if ([
        UITypes_1.default.Year,
        UITypes_1.default.Time,
        UITypes_1.default.Date,
        UITypes_1.default.DateTime,
        UITypes_1.default.CreatedTime,
        UITypes_1.default.LastModifiedTime,
    ].includes(type)) {
        return ['count', 'min', 'max', 'countDistinct'];
    }
    if ((0, UITypes_1.isNumericCol)(type)) {
        // Number, Currency, Percent, Duration, Rating, Decimal
        return [
            'sum',
            'count',
            'min',
            'max',
            'avg',
            'countDistinct',
            'sumDistinct',
            'avgDistinct',
        ];
    }
    if ([
        UITypes_1.default.SingleLineText,
        UITypes_1.default.LongText,
        UITypes_1.default.User,
        UITypes_1.default.Email,
        UITypes_1.default.PhoneNumber,
        UITypes_1.default.URL,
        UITypes_1.default.JSON,
    ].includes(type)) {
        return ['count', 'countDistinct'];
    }
    if ([UITypes_1.default.Checkbox].includes(type)) {
        return ['count', 'sum'];
    }
    if ([UITypes_1.default.Attachment].includes(type)) {
        return [];
    }
    if ([UITypes_1.default.SingleSelect, UITypes_1.default.MultiSelect].includes(type)) {
        return ['count', 'countDistinct'];
    }
    return [
        'sum',
        'count',
        'min',
        'max',
        'avg',
        'countDistinct',
        'sumDistinct',
        'avgDistinct',
    ];
};
exports.getAvailableRollupForUiType = getAvailableRollupForUiType;
const getAvailableRollupForFormulaType = (type) => {
    switch (type) {
        case formulaHelpers_1.FormulaDataTypes.DATE:
        case formulaHelpers_1.FormulaDataTypes.INTERVAL: {
            return ['count', 'min', 'max', 'countDistinct'];
        }
        case formulaHelpers_1.FormulaDataTypes.NUMERIC: {
            return [
                'sum',
                'count',
                'min',
                'max',
                'avg',
                'countDistinct',
                'sumDistinct',
                'avgDistinct',
            ];
        }
        case formulaHelpers_1.FormulaDataTypes.BOOLEAN: {
            return ['count', 'sum'];
        }
        case formulaHelpers_1.FormulaDataTypes.STRING: {
            return ['count', 'countDistinct'];
        }
        case formulaHelpers_1.FormulaDataTypes.UNKNOWN:
        default: {
            return ['count'];
        }
    }
};
exports.getAvailableRollupForFormulaType = getAvailableRollupForFormulaType;
const getRenderAsTextFunForUiType = (type) => {
    if ([
        UITypes_1.default.Year,
        UITypes_1.default.Time,
        UITypes_1.default.Date,
        UITypes_1.default.DateTime,
        UITypes_1.default.CreatedTime,
        UITypes_1.default.LastModifiedTime,
        UITypes_1.default.Currency,
        UITypes_1.default.Duration,
    ].includes(type)) {
        return ['count', 'countDistinct'];
    }
    return [
        'sum',
        'count',
        'avg',
        'min',
        'max',
        'countDistinct',
        'sumDistinct',
        'avgDistinct',
    ];
};
exports.getRenderAsTextFunForUiType = getRenderAsTextFunForUiType;
const getFileName = ({ name, count, ext }) => `${name}${count ? `(${count})` : ''}${ext ? `${ext}` : ''}`;
// add count before extension if duplicate name found
function populateUniqueFileName(fileName, attachments) {
    return fileName.replace(/^(.+?)(?:\((\d+)\))?(\.(?:tar|min)\.(?:\w{2,4})|\.\w+)$/, (fileName, name, count, ext) => {
        let genFileName = fileName;
        let c = count || 1;
        // iterate until a unique name
        while (attachments.some((fn) => fn === genFileName)) {
            genFileName = getFileName({
                name,
                ext,
                count: c++,
            });
        }
        return genFileName;
    });
}
function roundUpToPrecision(number, precision = 0) {
    precision =
        precision == null
            ? 0
            : precision >= 0
                ? Math.min(precision, 292)
                : Math.max(precision, -292);
    if (precision) {
        // Shift with exponential notation to avoid floating-point issues.
        // See [MDN](https://mdn.io/round#Examples) for more details.
        let pair = `${number}e`.split('e');
        const value = Math.round(Number(`${pair[0]}e${+pair[1] + precision}`));
        pair = `${value}e`.split('e');
        return (+`${pair[0]}e${+pair[1] - precision}`).toFixed(precision);
    }
    return Math.round(number).toFixed(precision);
}
const testDataBaseNames = {
    [enums_1.ClientType.MYSQL]: null,
    mysql: null,
    [enums_1.ClientType.PG]: 'postgres',
    oracledb: 'xe',
    [enums_1.ClientType.SQLITE]: 'a.sqlite',
};
const getTestDatabaseName = (db) => {
    var _a;
    if (db.client === enums_1.ClientType.PG || db.client === enums_1.ClientType.SNOWFLAKE)
        return (_a = db.connection) === null || _a === void 0 ? void 0 : _a.database;
    return testDataBaseNames[db.client];
};
exports.getTestDatabaseName = getTestDatabaseName;
const integrationCategoryNeedDefault = (category) => {
    return [Api_1.IntegrationsType.Ai].includes(category);
};
exports.integrationCategoryNeedDefault = integrationCategoryNeedDefault;
function parseProp(v) {
    var _a;
    if ((0, is_1.ncIsUndefined)(v) || (0, is_1.ncIsNull)(v))
        return {};
    try {
        return typeof v === 'string' ? (_a = JSON.parse(v)) !== null && _a !== void 0 ? _a : {} : v;
    }
    catch (_b) {
        return {};
    }
}
function stringifyProp(v) {
    var _a;
    if ((0, is_1.ncIsUndefined)(v) || (0, is_1.ncIsNull)(v))
        return '{}';
    try {
        return typeof v === 'string' ? v : (_a = JSON.stringify(v)) !== null && _a !== void 0 ? _a : '{}';
    }
    catch (_b) {
        return '{}';
    }
}
function parseHelper(v) {
    try {
        return typeof v === 'string' ? JSON.parse(v) : v;
    }
    catch (_a) {
        return v;
    }
}
function stringifyHelper(v) {
    try {
        return typeof v === 'string' ? v : JSON.stringify(v);
    }
    catch (_a) {
        return v;
    }
}
function toSafeInteger(value) {
    return Math.max(Number.MIN_SAFE_INTEGER, Math.min(value, Number.MAX_SAFE_INTEGER));
}
function isCrossBaseLink(col) {
    var _a, _b, _c;
    return (col &&
        (0, UITypes_1.isLinksOrLTAR)(col) &&
        ((_a = col.colOptions) === null || _a === void 0 ? void 0 : _a.fk_related_base_id) &&
        ((_b = col.colOptions) === null || _b === void 0 ? void 0 : _b.fk_related_base_id) !==
            ((_c = col.colOptions) === null || _c === void 0 ? void 0 : _c.base_id));
}
function lookupCanHaveRecursiveEvaluation(param) {
    const { isEeUI, dbClientType, relationType, relationCol } = param;
    return (isEeUI &&
        dbClientType === enums_1.ClientType.PG &&
        isSelfReferencingTableColumn(relationCol) &&
        [globals_1.RelationTypes.HAS_MANY, globals_1.RelationTypes.BELONGS_TO].includes(relationType));
}
//# sourceMappingURL=data:application/json;base64,